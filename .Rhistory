"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
library(stringr)
#read csv
shanghai <- read.csv("ShanghaiData.csv")
shanghai <- as.data.frame(shanghai)
#Rename the column names
names(shanghai) <- c("Year", "Total_Number_of_Employed_Persons_by_10000",
"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
shanghai_rows <- shanghai[-(1:n), , drop = FALSE]
#Delate the last 2 rows with the column names as values(nothing else).
shanghai_rows2 <- head(shanghai_rows, -2)
#Taking data from 2004 to 2013(most recent available data)
shanghai_data <- shanghai_rows2 %>%
filter(Year > 2003)
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
#Taking data from 2004 to 2013(most recent available data)
shanghai_data <- shanghai_rows2 %>%
filter(Year > 2003)
"Here is a plot of the total employed population in Shanghai. We chose to add this data, to help "
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
recent_Shanghai <- left_join(shanghai_data, recent_china)
library(tidyverse)
china_tibble = as_tibble(china_data)
desc_china_tib = arrange(china_tibble, desc(Year))
desc_china_tib$Year = c(1949:2017)
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise,
Shanghai_Output)
# Visualized the data into a point plot
library(ggplot2)
ggplot(data = recent_china) +
geom_point(mapping = aes(x = Year, y = Shanghai_Enterprise)) +
labs(title = "Number of Beijing Enterprises",
x = "Year",
y = "Shanghai Enterprises")
#read csv
shanghai <- read.csv("ShanghaiData.csv")
#Rename the column names
names(shanghai) <- c("Year", "Total_Number_of_Employed_Persons_by_10000",
"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
shanghai_rows <- shanghai[-(1:n), , drop = FALSE]
#Convert the Year column from string to numeric by inputting a numeric
#vector with a sequence from 1949 to 2013
shanghai_rows2$Year <- c(1949:2013)
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
recent_Shanghai <- left_join(shanghai_data, recent_china)
View(shanghai_data)
shanghai_data
library(tidyverse)
china_data = read.csv("China_EO_49to17.csv")
desc_china_tib = arrange(china_tibble, desc(Year))
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise,
Shanghai_Output)
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise,
Shanghai_Output)
# Visualized the data into a point plot
library(ggplot2)
library(stringr)
#read csv
shanghai <- read.csv("ShanghaiData.csv")
shanghai <- as.data.frame(shanghai)
#Rename the column names
names(shanghai) <- c("Year", "Total_Number_of_Employed_Persons_by_10000",
"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
shanghai_rows <- shanghai[-(1:n), , drop = FALSE]
#Delate the last 2 rows with the column names as values(nothing else).
shanghai_rows2 <- head(shanghai_rows, -2)
#Convert the Year column from string to numeric by inputting a numeric
#vector with a sequence from 1949 to 2013
shanghai_rows2$Year <- c(1949:2013)
#Taking data from 2004 to 2013(most recent available data)
shanghai_data <- shanghai_rows2 %>%
filter(Year > 2003)
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
View(shanghai_data)
library(installr)
updateR()
intstall("tigeris")
intstall("tigris")
library(tigris)
intstall("tigris")
install("tigris")
install.packages("tigris")
library(graphics)
library(stringi)
library(tigris)
options(class = "sf")
options(tigris_use_cache = TRUE)
wa <- rbind_tigris(tracts("WA", cb = TRUE))
View(wa)
ggplot(orwa) + geom_sf()
library(ggplot2)
ggplot(orwa) + geom_sf()
ggplot(wa) + geom_sf()
cb <- core_based_statistical_areas(cb = TRUE)
pdx <- filter(cb, grepl("Tacoma", NAME))
ggplot(pdx) + geom_sf()
pdx <- filter(cb, grepl("Tacoma", NAME))
tacoma_zips <- zctas(state = "WA", starts_with = "984", year = "2018")
tacoma <- filter_place("WA", "Tacoma")
tacoma <- places("Washington") %>%
filter_place("Tacoma")
View(tacoma)
plot(tacoma)
options("load_tiger")
options("refresh")
options("tigris_refresh")
blocks(tacoma)
install.packages("purrr")
install.packages("purrr")
install.packages("tidycensus")
library(tidycensus)
library(purrr)
View(tacoma)
pierce_blocks <- blocks(state = "WA", county = "Pierce", year = "2017")
library(graphics)
library(stringi)
library(tigris)
library(ggplot2)
library(tidycensus)
library(purrr)
library(tidyverse)
library(acs)
library(XML)
library(stringr)
options(class = "sf")
options(tigris_use_cache = TRUE)
options(error=recover)
pierce_blocks <- blocks(state = "WA", county = "Pierce", year = "2017")
View(tacoma)
View(pierce_blocks)
tacoma <- places("Washington", year = 2017) %>%
filter_place("Tacoma")
View(tacoma)
tacoma <- places("Washington", county = "Pierce", year = 2017) %>%
filter_place("Tacoma")
View(pierce_blocks)
View(pierce_blocks)
tacoma_pierce_blocks <- geo_join(tacoma, pierce_blocks, S4, STATEFP, by = NULL, how = "left")
0
tacoma_pierce_blocks <- geo_join(tacoma, pierce_blocks, NULL, STATEFP, by = NULL, how = "left")
---
title: "MoransI"
author: "Alberto Melendez"
date: "February 4, 2019"
output: html_document
---
```{r}
library(tidyverse)
library(sf)
library(raster)
library(spdep)
t_blocks <- read.csv("tacoma_blocks2.csv")
t_tracts <- read.csv("tacoma_tracts2.csv")
t_od <- read.csv("od2015_Tacoma.csv")
t_od$h_geocode <- substr(as.character(t_od$h_geocode),
start = 1,
stop = nchar(as.character(t_od$h_geocode)) - 4)
t_rac <- read.csv("rac2015_Tacoma.csv")
t_wac <- read.csv("wac2015_Tacoma.csv")
t_blocks$h_geocode <- t_blocks$GEOID10
t_blocks$h_geocode <- substr(as.character(t_blocks$h_geocode),
start = 1,
stop = nchar(as.character(t_blocks$h_geocode)) - 4)
t_tracts$h_geocode <- t_tracts$GEOID.1
t_rac$h_geocode <- t_rac$ht
t_rac$h_geocode <- substr(as.character(t_rac$h_geocode),
start = 1,
stop = nchar(as.character(t_rac$h_geocode)) - 4)
residental_blocks <- merge(t_blocks, t_rac, by = "h_geocode")
od_blocks <- merge(t_blocks, t_od, by = "h_geocode")
od_tracts <- merge(t_tracts, t_od, by = "h_geocode")
moransI <- moran.test(odblocks)
```
moransI <- moran.test(od_blocks$SE03)
moransI <- moran.test(od_blocks$SE03, lw)
setwd("~/Geog458new/Lab2/Group-Lab-2-Destination-Data")
library(tigris)
library(tidycensus)
library(purrr)
library(tidyverse)
library(stringr)
library(dplyr)
library(sf)
library(rgeos)
library(rgdal)
library(sp)
library(ggplot2)
options(class = "sf")
options(tigris_use_cache = TRUE)
#Gather place data for Tacoma and make it sf.
tacoma <- st_as_sf(places("Washington", year = 2017) %>% filter_place("Tacoma"))
#Gather tract data for Pierce County and make it sf.
pierce_tracts <- st_as_sf(tracts(state = "WA", county = "Pierce", year = "2017", cb = TRUE))
#Gather block data for Pierce County and make it sf.
pierce_blocks <- st_as_sf(blocks(state = "WA", county = "Pierce", year = "2017"))
tacoma_block_shape <- st_read("Lab 2 Data/tacoma_blocks.shp")
tacoma_block_shape <- st_read("tacoma_blocks.shp")
tacoma_block_shape <- read_sf("tacoma_blocks.shp")
library(rgdal)
tacoma_block_shape <- readOGR("tacoma_blocks.shp")
tacoma_block_shape <- readOGR("tacoma_blocks.shp", dsn = ".")
tacoma_block_shape <- readOGR(layer = "tacoma_blocks.shp", dsn = ".")
tacoma_block_shape <- readOGR(dsn = ".", layer = "tacoma_blocks.shp")
tacoma_blocks <- st_intersection(tacoma, pierce_blocks)
tacoma_tracts <- st_intersection(tacoma, pierce_tracts)
plot(tacoma_tracts)
plot(tacoma)
plot(tacoma_blocks)
st_write(obj = tacoma_blocks, dsn = "tacomablocks.sf")
st_write(obj = tacoma_blocks, dsn = "tacomablocks.sf", driver = st_drivers())
st_write(obj = tacoma_blocks, dsn = "tacomablocks.sf", driver = "ESRI Shapefile")
st_write(obj = tacoma_tracts, dsn = "tacomatracts.sf", driver = "ESRI Shapefile")
test <-  st_read("tacomablocks.sf")
test <-  read_sf("tacomablocks.sf")
test <-  read_sf("tacomablocks.sf", stringsAsFactors = FALSE)
test <-  read_sf("tacomablocks.sf", stringsAsFactors = FALSE)
install.packages("tmap")
library(tmap)
tm_shape(od_blocks) + tm_polygons(style="quantile", col = "Income") +
tm_legend(outside = TRUE, text.size = .8)
setwd("~/Geog458new/Lab2/Group-Lab-2-Destination-Data")
library(rgdal)    # for readOGR and others
library(sp)       # for spatial objects
library(dplyr)    # for working with data frames
library(maptools)
library(tidyverse)
library(rgdal)
library(tmap)
t_blocks <- read.csv("tacoma_blocks2.csv")
t_tracts <- read.csv("tacoma_tracts2.csv")
t_od <- read.csv("od2015_Tacoma.csv")
t_od$h_geocode <- substr(as.character(t_od$h_geocode),
start = 1,
stop = nchar(as.character(t_od$h_geocode)) - 4)
t_rac <- read.csv("rac2015_Tacoma.csv")
t_wac <- read.csv("wac2015_Tacoma.csv")
t_blocks$h_geocode <- t_blocks$GEOID10
t_blocks$h_geocode <- substr(as.character(t_blocks$h_geocode),
start = 1,
stop = nchar(as.character(t_blocks$h_geocode)) - 4)
t_tracts$h_geocode <- t_tracts$GEOID.1
t_rac$h_geocode <- t_rac$ht
t_rac$h_geocode <- substr(as.character(t_rac$h_geocode),
start = 1,
stop = nchar(as.character(t_rac$h_geocode)) - 4)
residental_blocks <- merge(t_blocks, t_rac, by = "h_geocode")
od_blocks <- merge(t_blocks, t_od, by = "h_geocode")
od_tracts <- merge(t_tracts, t_od, by = "h_geocode")
od_blocks <- st_as_sf(od_blocks)
od_blocks$SI02 <- as.double(od_blocks$SI02)
tm_shape(od_blocks) + tm_polygons(style="quantile", col = "Income") +
tm_legend(outside = TRUE, text.size = .8)
tm_shape(od_blocks$) + tm_polygons(style="quantile", col = "SE03") +
tm_shape(od_blocks$) + tm_polygons(style="quantile", col = "SE03") +
tm_shape(od_blocks) + tm_polygons(style="quantile", col = "SE03") +
tm_legend(outside = TRUE, text.size = .8)
od_blocks <- st_as_sf(od_blocks)
st_write(obj = tacoma_blocks, dsn = "tacomablocks.shp", driver = "ESRI Shapefile")
st_write(obj = tacoma_blocks, dsn = "tacomablocks.shp")
st_write(obj = tacoma_blocks, dsn = "tacomablocks.kml")
tblocks2 <- st_read("tacomablocks.kml")
save.image(tacoma_blocks, file = ".RData")
save(tacoma_blocks, file = ".RData")
save(tacoma_blocks, file = "tacomablocks.RData")
save(tacoma_blocks, file = "tacomablocks.RData")
save(tacoma_tracts, file = "tacomatracts.RData")
plot(tacoma_blocks)
options(sf_max.plot = 1)
plot(tacoma_tracts)
plot(tacoma_blocks)
library(tigris)
library(tidycensus)
library(purrr)
library(tidyverse)
library(dplyr)
library(rgeos)
library(sp)
options(class = "sf")
options(tigris_use_cache = TRUE)
#Gather place data for Tacoma and make it sf.
tacoma <- st_as_sf(places("Washington", year = 2017) %>% filter_place("Tacoma"))
#Gather place data for Tacoma and make it sf.
tacoma <- st_as_sf(places("Washington", year = 2017) %>% filter_place("Tacoma"))
#Gather tract data for Pierce County and make it sf.
pierce_tracts <- st_as_sf(tracts(state = "WA", county = "Pierce", year = "2017", cb = TRUE))
#Gather tract data for Pierce County and make it sf.
pierce_tracts <- st_as_sf(tracts(state = "WA", county = "Pierce", year = "2017", cb = TRUE))
#Gather block data for Pierce County and make it sf.
pierce_blocks <- st_as_sf(blocks(state = "WA", county = "Pierce", year = "2017"))
#Gather tract data for Pierce County and make it sf.
pierce_tracts <- st_as_sf(tracts(state = "WA", county = "Pierce", year = "2017", cb = TRUE))
#Gather block data for Pierce County and make it sf.
pierce_blocks <- st_as_sf(blocks(state = "WA", county = "Pierce", year = "2017"))
#testing plot
plot(tacoma_tracts)
t_blocks <- load(file = "tacomablocks.RData")
t_blocks <- load(file = "tacomablocks.Rda",)
t_blocks <- load(file = "tacomablocks.Rda")
t_blocks <- readRDS(file = "tacomablocks.Rda")
t_blocks <- readRDS(file = "tacomablocks.rda")
t_blocks <- readRDS(file = "tacomablocks.RData")
t_blocks <- load("tacomablocks.RData")
st_write(obj = tacoma_tracts, dsn = "tacomatracts.geosjson")
tacoma_blocks <- st_intersection(tacoma, pierce_blocks)
tacoma_tracts <- st_intersection(tacoma, pierce_tracts)
st_write(obj = tacoma_tracts, dsn = "tacomatracts.geosjson")
st_write(obj = tacoma_tracts, dsn = "tacomatracts.geosjson", driver = "GeoJSON")
st_write(obj = tacoma_blocks, dsn = "tacomablocks.geojson", driver = "GeoJSON")
t_tracts <- st_read("tacomatracts.geojson")
t_tracts <- st_read("tacomatracts.shp")
t_tracts <- read_sf(dsn = ".", layer = "tacomablocks.shp")
t_tracts <- read_sf("tacomablocks.shp")
library(raster)
t_tracts <- shapefile("tacomablocks.shp")
t_tracts <- shapefile("tacomablocks")
t_tracts <- shapefile("tacomablocks-polygon.shp")
t_tracts <- st_read("tacomablocks-polygon.shp")
t_tracts <- read_sf("tacomablocks.shp")
t_tracts <- read_sf("Shapefiles/tacomablocks.shp")
t_tracts <- read_sf("./Shapefiles/tacomablocks.shp")
t_tracts <- read_sf("./Shapefiles/tacomablocks.shp")
t_tracts <- read_sf("/Shapefiles/tacomablocks.shp")
t_tracts <- read_sf("Shapefiles/tacomablocks.shp")
t_tracts <- read_sf("./Shapefiles/tacomablocks.shx")
library(tidyverse)
baseData=read.csv("wa_od_main_JT01_2015.csv")
library(dplyr)
###Create Map 1
# Block Shapefile with WAC
WACB$GEOID10= WACB$w_geocode
ODDATA <- read.csv("od2015_Tacoma.csv")
WACT <- read.csv("wac2015_Tacoma.csv")
WACB <- read.csv("wac2015_Tacoma_Block.csv")
tacomablockshp <- st_read("tacomablocks-polygon.shp")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(dplyr)
library(tmap)
library(leaflet)
library(ggplot2)
library(shiny)
ODDATA <- read.csv("od2015_Tacoma.csv")
WACT <- read.csv("wac2015_Tacoma.csv")
WACB <- read.csv("wac2015_Tacoma_Block.csv")
tacomablockshp <- st_read("tacomablocks-polygon.shp")
tacomatractshp <- st_read("pie10ct.shp")
Washingtontractshp <- st_read("cb_2017_53_tract_500k.shp")
library(tidyverse)
baseData=read.csv("wa_od_main_JT01_2015.csv")
library(dplyr)
###Create Map 1
# Block Shapefile with WAC
WACB$GEOID10= WACB$w_geocode
WACBLOCK <- merge(tacomablockshp, WACB, by=c("GEOID10"))
#Change label name for plot Block
WACBLOCK$Population = WACBLOCK$CE01
#plot block
BLOCK_MAP <- tm_shape(WACBLOCK) +tm_polygons() +tm_symbols(col="Population") + tm_borders() +tm_layout(title = "Number of jobs with earnings $1250/month or less in the City of Tacoma on a Block Level", title.position = c("RIGHT", "TOP"))
BLOCK_MAP
##Create Map 2
#Number of jobs with earnings $1250/month or less
#plot 2 track
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
View(WACT)
View(tacoma_tracts)
tacomatractshp <- st_read("pie10ct.shp")
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
WACTRACT$Population = WACTRACT$CE01
TRACt_MAP <- tm_shape(WACTRACT) +tm_polygons() +tm_symbols(col="Population") + tm_borders() +tm_layout(title = "Number of jobs with earnings $1250/month or less in the City of Tacoma on a Tract Level", title.position = c("RIGHT", "TOP"))
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
WACT <- read.csv("wac2015_Tacoma.csv")
WACB <- read.csv("wac2015_Tacoma_Block.csv")
tacomablockshp <- st_read("tacomablocks-polygon.shp")
tacomatractshp <- st_read("pie10ct.shp")
Washingtontractshp <- st_read("cb_2017_53_tract_500k.shp")
###Create Map 1
# Block Shapefile with WAC
WACB$GEOID10= WACB$w_geocode
WACBLOCK <- merge(tacomablockshp, WACB, by=c("GEOID10"))
#Change label name for plot Block
WACBLOCK$Population = WACBLOCK$CE01
#plot block
BLOCK_MAP <- tm_shape(WACBLOCK) +tm_polygons() +tm_symbols(col="Population") + tm_borders() +tm_layout(title = "Number of jobs with earnings $1250/month or less in the City of Tacoma on a Block Level", title.position = c("RIGHT", "TOP"))
BLOCK_MAP
BLOCK_MAP
##Create Map 2
#Number of jobs with earnings $1250/month or less
#plot 2 track
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
View(tacomatractshp)
WACT$GEOID10 = WACT$wt
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
WACTRACT$Population = WACTRACT$CE01
TRACt_MAP <- tm_shape(WACTRACT) +tm_polygons() +tm_symbols(col="Population") + tm_borders() +tm_layout(title = "Number of jobs with earnings $1250/month or less in the City of Tacoma on a Tract Level", title.position = c("RIGHT", "TOP"))
TRACT_MAP
TRACT_MAP <- tm_shape(WACTRACT) +tm_polygons() +tm_symbols(col="Population") + tm_borders() +tm_layout(title = "Number of jobs with earnings $1250/month or less in the City of Tacoma on a Tract Level", title.position = c("RIGHT", "TOP"))
TRACT_MAP
BLOCK_MAP
###Create Map of OD
HomeTract1 <-filter(ODDATA, ht == 53053060905)
Washingtontractshp$wt = Washingtontractshp$GEOID
HomeTract1Merge <- merge(Washingtontractshp, HomeTract1, by=c("wt"), all = TRUE)
HomeTract1Merge[is.na(HomeTract1Merge)] <- 0
tm_shape(HomeTract1Merge) +tm_polygons() +  tm_symbols(col="wt") + tm_borders() +tm_layout(title = "Points of places where people who live in area 53053060905 work", title.position = c("RIGHT", "TOP"))
library(sfdep)
library(spdep)
nb <- poly2nb(ODDATA, queen=TRUE)
View(ODDATA)
tm_shape(ODDATA) + tm_polygons(style="quantile", col = "SI03") +
tm_legend(outside = TRUE, text.size = .8)
ODDATA_shp <- st_as_sf(ODDATA)
install.packages("RcolorBrewer")
y
install.packages("RColorBrewer")
getwd()
library(tidyverse)
library(tidyverse)
library(sf)
library(dplyr)
library(tmap)
library(tmap)
library(leaflet)
library(ggplot2)
library(shiny)
library(maptools)
library(RColorBrewer)
library(maptools)
library(RColorBrewer)
names(ODDATA)
high_earnings <- ODDATA$SE03
home_tracts <- ODDATA$ht
LQ <- function(high_earnings, home_tracts) {
sdp<- high_earnings / home_tracts
dp<-  sum(high_earnings)/ sum(home_tracts)
sdp/dp
}
home_tract_LQ <- data.frame(ODDATA$ons_label, LQ(high_earnings, home_tracts))
View(tacomablockshp)
View(wa)
TACOMATRACT <- merge(tacomatractshp, ODDATA, by=c("GEOID10"))
View(WACB)
WACT$GEOID10 = WACT$wt
WACTRACT <- merge(tacomatractshp, WACT, by=c("GEOID10"))
TACOMATRACT <- merge(WACTRACT, ODDATA, by=c("wt"))
View(TACOMATRACT)
